version: '3.8'
services:
  springboot-jpa-rest-service:
    container_name: springboot-jpa-rest-service
    extra_hosts:
      - "host.docker.internal:host-gateway"
    image: springboot-jpa-rest-service:latest
    ports:
      - "9081:9081"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://host.docker.internal:9081 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    build:
      context: .
    depends_on:
      postgresql.jpa.rest.service.db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql.jpa.rest.service.db:5432/springboot-jpa-rest-db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Welcome1234
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  postgresql.jpa.rest.service.db:
    image: 'timescale/timescaledb-ha:pg16'
    ports:
      - "5432:5432"
    container_name: postgresql.jpa.rest.service.db
    hostname: postgresql.jpa.rest.service.db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Welcome1234
      - POSTGRES_DB=springboot-jpa-rest-db
    volumes:
      - ./postgresql.jpa.rest.service.db.volume:/var/lib/postgresql/data
      - ./script/db:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5