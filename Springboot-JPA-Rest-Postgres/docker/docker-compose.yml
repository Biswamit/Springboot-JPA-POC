version: '3.8'
services:
  prometheus-jpa-rest:
    image: prom/prometheus:latest
    container_name: prometheus-jpa-rest
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - sb-eks-jpa-rest-svc-nw

  grafana-jpa-rest:
    image: grafana/grafana:latest
    container_name: grafana-jpa-rest
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost
    networks:
      - sb-eks-jpa-rest-svc-nw

  springboot-jpa-rest-service:
    container_name: springboot-jpa-rest-service
    hostname: springboot-jpa-rest-service
    extra_hosts:
      - "host.docker.internal:host-gateway"
    image: springboot-jpa-rest-service:latest
    ports:
      - "9081:9081"
    build:
      context: ../springboot-jpa-rest-service/src/main/docker/
    depends_on:
      postgresql.jpa.rest.service.db:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql.jpa.rest.service.db:5432/springboot-jpa-rest-db #Direct
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Welcome1234
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - sb-eks-jpa-rest-svc-nw
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://springboot-jpa-rest-service:9081 || exit 1 #curl --fail http://springboot-jpa-rest-service:9081 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

  postgresql.jpa.rest.service.db:
    image: 'postgres:16.1-alpine3.18'
    shm_size: 256mb
    ports:
      - "5432:5432"
    container_name: postgresql.jpa.rest.service.db
    hostname: postgresql.jpa.rest.service.db
    restart: always
    #command:  -c 'max_locks_per_transaction=6144'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Welcome1234
      - POSTGRES_DB=springboot-jpa-rest-db
    volumes:
      - ./postgresql.jpa.rest.service.db.volume:/var/lib/postgresql/data
      - ./script/db:/docker-entrypoint-initdb.d
    networks:
      - sb-eks-jpa-rest-svc-nw
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres.exporter.db:
    image: quay.io/prometheuscommunity/postgres-exporter
    ports:
      - "9187:9187"
    container_name: postgres.exporter.db
    hostname: postgres.exporter.db
    restart: always
    environment:
      - DATA_SOURCE_NAME=postgresql://monitoring:Welcome1234@postgresql.jpa.rest.service.db:5432/springboot-jpa-rest-db?sslmode=disable
    networks:
      - sb-eks-jpa-rest-svc-nw
    depends_on:
      postgresql.jpa.rest.service.db:
        condition: service_healthy
    healthcheck:
      test: ping -c 1 postgres.exporter.db
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  sb-eks-jpa-rest-svc-nw:
    name: sb-eks-jpa-rest-svc-nw
    driver: bridge